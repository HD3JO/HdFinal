<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyundai.project.user.repository.OrderMapper">

	<!-- 주문 페이지에서 작성한 정보 입력 -->
	<insert id="insertOrder" parameterType="com.hyundai.project.dto.OrderDTO">
		<selectKey keyProperty="oid" order="BEFORE" resultType="Integer">
			SELECT SEQ_ORDERS.NEXTVAL FROM DUAL
		</selectKey>
		INSERT 
		INTO ORDERS(
					OID, 
				    OADDRESS1,
				    OADDRESS2,    
				    ORECEIVER,
				    OPHONE, 
				    OTEL, 
				    OMEMO, 
				    OEMAIL, 
				    OBEFOREPRICE, 
				    OAFTERPRICE,
				    MILEAGE, 
				    OSTATUS, 
				    EMAIL, 
				    PMCODE
				    )
		VALUES( 
			   #{oid},		       
			   #{oaddress1, jdbcType=VARCHAR}, 
		       #{oaddress2, jdbcType=VARCHAR},
		       #{oreceiver, jdbcType=VARCHAR}, 
		       #{ophone, jdbcType=VARCHAR},
		       #{otel, jdbcType=VARCHAR}, 
		       #{omemo, jdbcType=VARCHAR}, 
		       #{oemail, jdbcType=VARCHAR}, 
		       #{obeforeprice, jdbcType=INTEGER}, 
		       #{oafterprice, jdbcType=INTEGER}, 
		       #{mileage, jdbcType=INTEGER},
		       #{ostatus, jdbcType=VARCHAR}, 
		       #{email, jdbcType=VARCHAR}, 	        
		       #{pmcode, jdbcType=VARCHAR}
		       )
	</insert>
	
	<!-- 각 주문 별로 주문한 상품 입력 -->
	<insert id="insertOrderItem" parameterType="java.util.List">
	 	<foreach collection="list" item="item" open ="insert all" close="select * from dual">
	 		INTO ORDER_ITEM(PSID,
	 						OID,
	 						OICOUNT,
	 						OITOTALPRICE)
	 					VALUES(#{item.psid},
	 							#{item.oid},
	 							#{item.oicount},
	 							#{item.oitotalprice})	
	 	</foreach>
    </insert>
    
    <!-- 마일리지 적립 -->
    <update id="updateMileage" parameterType="com.hyundai.project.dto.OrderDTO">
    	UPDATE MEMBER
    	SET MILEAGE = MILEAGE + #{mileage, jdbcType=INTEGER}
    	WHERE EMAIL = #{email, jdbcType=VARCHAR}
    </update>
	
	<!-- 사용자 주문 내역 조회-->
	<select id="getOrderList" resultType="com.hyundai.project.dto.OrderDTO">
		SELECT * FROM TABLE(FN_ORDER_SELECT(#{email}))
	</select>
	
	<!-- 관리자 페이지 회원 주문 내역 조회 -->
	<select id="getOrderListForAdmin">
	</select>
	
	<!-- 관리자 페이지 주문 상태 변경 -->
	 <update id="updateOrder" parameterType="com.hyundai.project.dto.OrderItemDTO">
 	 	UPDATE ORDER_ITEM
 	 	SET OSTATUS = '배송완료'
 	 	WHERE PSID = #{psid}
 	    AND OID = #{oid}
 	</update>
	
	
	<select id="selectOrderList" resultType="com.hyundai.project.dto.OrderListDTO">
        SELECT G.email, B.psid, D.pcimg1, F.bname, E.pname, D.pccolorcode, C.psize,
       	B.oicount, A.ostatus, D.pcid, G.name, D.pcprice, A.oid
    		FROM ORDERS A
    		INNER JOIN ORDER_ITEM B
    		ON A.oid = B.oid
    		INNER JOIN PRODUCTMANAGER.PRODUCT_STOCK C
    		ON B.psid = C.psid
    		INNER JOIN PRODUCTMANAGER.PRODUCT_COLOR D
    		ON C.pcid = D.pcid
    		INNER JOIN PRODUCTMANAGER.PRODUCT_COMMON E
    		ON D.pid = E.pid
    		INNER JOIN PRODUCTMANAGER.BRAND F
    		ON E.bno = F.bno
    		INNER JOIN MEMBER G
    		ON A.email = G.email
    		where G.email = #{email}
    		order by odate desc
    </select>
    
    <select id="selectOrderListByOneMonth" resultType="com.hyundai.project.dto.OrderListDTO">
        SELECT G.email, B.psid, D.pcimg1, F.bname, E.pname, D.pccolorcode, C.psize,
       	B.oicount, A.ostatus, D.pcid, G.name, D.pcprice, A.oid
    		FROM ORDERS A
    		INNER JOIN ORDER_ITEM B
    		ON A.oid = B.oid
    		INNER JOIN PRODUCTMANAGER.PRODUCT_STOCK C
    		ON B.psid = C.psid
    		INNER JOIN PRODUCTMANAGER.PRODUCT_COLOR D
    		ON C.pcid = D.pcid
    		INNER JOIN PRODUCTMANAGER.PRODUCT_COMMON E
    		ON D.pid = E.pid
    		INNER JOIN PRODUCTMANAGER.BRAND F
    		ON E.bno = F.bno
    		INNER JOIN MEMBER G
    		ON A.email = G.email
    		where G.email = #{email} AND odate BETWEEN sysdate-30 and sysdate
    		order by odate desc
    </select>
 
</mapper>